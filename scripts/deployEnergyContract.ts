import { toNano, Address } from '@ton/core';
import { compile, NetworkProvider } from '@ton/blueprint';
import { EnergyPurchaseContract } from '../contracts/EnergyPurchaseContract';

export async function run(provider: NetworkProvider) {
    // –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    const energyPurchaseCode = await compile('EnergyPurchase');
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
    const ownerAddress = Address.parse('UQBOxIuUPXHOu1fY0O7uGe9yIIaa0-DRcLIk2qVNa_0tZbFD'); // –í–∞—à –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π
    
    const energyPurchase = EnergyPurchaseContract.createFromConfig({
        ownerAddress,
        energyPrice25: toNano('0.5'),   // 0.5 TON –∑–∞ 25 —ç–Ω–µ—Ä–≥–∏–∏
        energyPrice50: toNano('1.0'),   // 1.0 TON –∑–∞ 50 —ç–Ω–µ—Ä–≥–∏–∏
        energyPrice100: toNano('2.0'),  // 2.0 TON –∑–∞ 100 —ç–Ω–µ—Ä–≥–∏–∏
    }, energyPurchaseCode);

    const energyPurchaseContract = provider.open(energyPurchase);

    // –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
    await energyPurchaseContract.sendDeploy(provider.sender(), toNano('0.05'));

    await provider.waitForDeploy(energyPurchase.address);

    console.log('‚úÖ Energy Purchase Contract deployed at:', energyPurchase.address.toString());
    console.log('üîó Explorer link: https://tonviewer.com/' + energyPurchase.address.toString());
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const prices = await energyPurchaseContract.getEnergyPrices();
    const owner = await energyPurchaseContract.getOwnerAddress();
    
    console.log('üìä Contract details:');
    console.log('   Owner:', owner.toString());
    console.log('   Price for 25 energy:', prices.price25.toString(), 'nanoTON');
    console.log('   Price for 50 energy:', prices.price50.toString(), 'nanoTON');
    console.log('   Price for 100 energy:', prices.price100.toString(), 'nanoTON');
    
    return energyPurchase.address.toString();
}
